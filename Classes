import random
import pygame

class interactiveobject:
    def __init__(self, image, posx, posy, display): #instantiates the variables that would be used
        self.image = pygame.image.load(image + ".png") # locates the image 
        self.path = image # the image variable will be a path as a string
        self.posx = posx #defining co-ordinates of the image
        self.posy = posy
        self.display = display # shows which screen it will be displayed on
        self.rect = pygame.Rect((self.posx, self.posy), (self.image.get_width(), self.image.get_height())) # creates a rectangle around it, which can be interacted with
        
    def draw(self):
        self.display.blit(self.image, (self.posx, self.posy)) # displays the image onto the screen


class Deck:
    def __init__(self):

        suits = ["clubs", "spades", "hearts", "diamonds"] #create the suits that will be looped through
        self.deck = [] #create an empty array that the deck will be stored in
        self.removedCards = [] #create an empty array that the removed cards will be stored

        for x in range(0,4): #loop through the suits
            for y in range(1, 14): #for each suit cread the 13 cards
                #change the picture cards to their correct names
                if y == 1:
                    card = "ace_" + suits[x] 
                elif y == 11:
                    card = "jack_" + suits[x]
                elif y == 12:
                    card = "queen_" + suits[x]
                elif y == 13:
                    card = "king_" + suits[x]
                else:
                    card = str(y) + "_" + suits[x] #format the card to the correct name
                
                self.deck.append(card) #add to deck

    def printCards(self):
        print(self.deck)

    def randomCard(self):
        if len(self.deck) > 5: #if the deck is less than 5 then it cannot give a new hand 
            card = random.randint(0, len(self.deck) - 1) #picks a random card from the deck
            print(card)
            returnvar = self.deck[card] #stored in a variable so that it can be returned and deleted
            del self.deck[card] #removes the card
            self.removedCards.append(card) #adds the card to the deck of removed
            return returnvar #returns the card
        else:
            print("There are no more cards in the deck") #error message

class card(interactiveobject):
    
    def select(self):
        if self.selected == False:
            self.image = pygame.image.load(self.path + "_white.png")
            self.selected = True
        else:
            self.image = pygame.image.load(self.path + ".png")
            self.selected = False

    def checkSelect(self):
        return self.selected

    def getPosx(self):
        return self.posx
    
    def getPosy(self):
        return self.posy
    
    def event_handler(self, event):
        if event.type == pygame.MOUSEBUTTONDOWN:
            if event.button == 1:
                if self.rect.collidepoint(event.pos):
                    self.select()

class button(interactiveobject):
    def event_handler(self, event, function):
        if event.type == pygame.MOUSEBUTTONDOWN:
            if event.button == 1:
                if self.rect.collidepoint(event.pos):
                    function()

class money:
    def __init__(self, cash): #initalises the amount of cash so that the next few functions can work on it
        self.cash = cash
    
    def increase(self, amount): # increases amount of cash
        self.cash += amount

    def decrease(self, amount): # decreases amount of cash
        self.cash -= amount

    def display(self, xpos, ypos, text, font, size):
        font = pygame.font.Font(font, size)
        text = font.render(text, True, )

class player(money, Deck):
    def __init__(self, cash, display, path):
        self.diction = {} # 
        self.cash = cash
        self.display = display
        self.path = path
        money.__init__(self, self.cash)
        Deck.__init__(self)

    def newhand(self):
        done = True
        while done:
            if len(self.diction) == 0:
                positions = [(320, 540), (480, 540), (640, 540), (800, 540), (960, 540)]
                for x in range(0, 5):
                    self.diction ["card{0}".format(x)] = card(self.path + self.randomCard(), positions[x][0], positions[x][1], self.display, False)
                done = False
            else:
                self.diction.clear()

    def drawhand(self):
        for x in self.diction:
            self.diction[x].draw()

    def event_handler(self,event):
        for x in self.diction:
            self.diction[x].event_handler(event)

    def drawcards(self):
        for x in self.diction:
            if self.diction[x].checkSelect() == True:
                self.diction[x] = card(self.path + self.randomCard(), self.diction[x].getPosx(), self.diction[x].getPosy(), self.display, False)
